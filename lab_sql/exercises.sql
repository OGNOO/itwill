ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD HH24:MI:SS';

/*
 * 연습문제:
 * https://github.com/JakeOh/202403_itwill_java152_lab_java/blob/master/lab_sql/hr.sql
 * 파일을 다운받고 스크립트 전체 실행.
 * countries, departments, employees, jobs, locations, regions 테이블 사용.
*/

-- 1. 직원의 last_name과 부서 이름을 검색. (inner join)
SELECT LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 2. 직원의 last_name과 부서 이름을 검색. 부서 번호가 없는 직원도 출력. (left outer join)
SELECT LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID( + );

SELECT LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
  LEFT JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 3. 직원의 last_name과 직무 이름(job title)을 검색.
SELECT LAST_NAME, S.JOB_TITLE
FROM EMPLOYEES E, JOBS S
WHERE E.JOB_ID = S.JOB_ID;

SELECT LAST_NAME, S.JOB_TITLE
FROM EMPLOYEES E
  JOIN JOBS S
  ON E.JOB_ID = S.JOB_ID;

-- 4. 직원의 last_name과 직원이 근무하는 도시 이름(city)를 검색.
SELECT LAST_NAME, LOC.CITY
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS LOC
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
  AND D.LOCATION_ID = LOC.LOCATION_ID;

SELECT LAST_NAME, LOC.CITY
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
  JOIN LOCATIONS LOC
  ON D.LOCATION_ID = LOC.LOCATION_ID;

-- 5. 직원의 last_name과 직원이 근무하는 도시 이름(city)를 검색. 근무 도시를 알 수 없는 직원도 출력.
SELECT LAST_NAME, LOC.CITY
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS LOC
WHERE D.LOCATION_ID = LOC.LOCATION_ID( + )
  AND E.DEPARTMENT_ID = D.DEPARTMENT_ID( + );

SELECT LAST_NAME, LOC.CITY
FROM EMPLOYEES E
  LEFT JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
  LEFT JOIN LOCATIONS LOC
  ON D.LOCATION_ID = LOC.LOCATION_ID;

-- 6. 2008년에 입사한 직원들의 last_name을 검색.
SELECT LAST_NAME
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE, 'YYYY') = 2008;

-- 7. 2008년에 입사한 직원들의 부서 이름과 부서별 인원수 검색.
SELECT D.DEPARTMENT_NAME, COUNT( * )
FROM EMPLOYEES E, DEPARTMENTS D
WHERE TO_CHAR(HIRE_DATE, 'YYYY') = 2008
  AND D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME;

SELECT D.DEPARTMENT_NAME, COUNT( * )
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE TO_CHAR(HIRE_DATE, 'YYYY') = 2008
GROUP BY D.DEPARTMENT_NAME;

-- 8. 2008년에 입사한 직원들의 부서 이름과 부서별 인원수 검색.
--    단, 부서별 인원수가 5명 이상인 경우만 출력.
SELECT D.DEPARTMENT_NAME, COUNT( * )
FROM EMPLOYEES E, DEPARTMENTS D
WHERE TO_CHAR(HIRE_DATE, 'YYYY') = 2008
  AND D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME
HAVING COUNT(DEPARTMENT_NAME) >= 5;

SELECT D.DEPARTMENT_NAME, COUNT( * )
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE TO_CHAR(HIRE_DATE, 'YYYY') = 2008
GROUP BY D.DEPARTMENT_NAME
HAVING COUNT(DEPARTMENT_NAME) >= 5;

-- 9. 부서번호, 부서별 급여 평균을 검색. 소숫점 한자리까지 반올림 출력.
SELECT DEPARTMENT_ID, ROUND(AVG(SALARY), 1)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- 10. 부서별 급여 평균이 최대인 부서의 부서번호, 급여 평균을 검색.
SELECT DEPARTMENT_ID, ROUND(AVG(SALARY), 1)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING ROUND(AVG(SALARY), 1) = (
    SELECT MAX(ROUND(AVG(SALARY), 1))
    FROM EMPLOYEES
    GROUP BY DEPARTMENT_ID
  );

-- with-as-select 구문
WITH T AS(
  SELECT DEPARTMENT_ID, AVG(SALARY)AS AVG_SAL
  FROM EMPLOYEES
  GROUP BY DEPARTMENT_ID
)
SELECT DEPARTMENT_ID, ROUND(AVG_SAL, 1)
FROM T
WHERE AVG_SAL = (
    SELECT MAX(AVG_SAL)
    FROM T
  );

-- 다중행 서브 쿼리
SELECT DEPARTMENT_ID, ROUND(AVG(SALARY), 1)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING ROUND(AVG(SALARY), 1) >= ALL(
    SELECT ROUND(AVG(SALARY), 1)
    FROM EMPLOYEES
    GROUP BY DEPARTMENT_ID
  );

-- 11. 사번, 직원이름, 국가이름, 급여 검색.
SELECT E.EMPLOYEE_ID, E.FIRST_NAME
                                                   || E.LAST_NAME AS 직원이름, CONT.COUNTRY_NAME, E.SALARY
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS LOC, COUNTRIES CONT
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
  AND D.LOCATION_ID = LOC.LOCATION_ID
  AND LOC.COUNTRY_ID = CONT.COUNTRY_ID;

SELECT E.EMPLOYEE_ID, E.FIRST_NAME
                      || E.LAST_NAME AS 직원이름, CONT.COUNTRY_NAME, E.SALARY
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
  JOIN LOCATIONS LOC
  ON D.LOCATION_ID = LOC.LOCATION_ID
  JOIN COUNTRIES CONT
  ON LOC.COUNTRY_ID = CONT.COUNTRY_ID;

-- 12. 국가이름, 국가별 급여 합계 검색
SELECT CONT.COUNTRY_NAME, SUM(E.SALARY)
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS LOC, COUNTRIES CONT
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
  AND D.LOCATION_ID = LOC.LOCATION_ID
  AND LOC.COUNTRY_ID = CONT.COUNTRY_ID
GROUP BY CONT.COUNTRY_NAME;

SELECT CONT.COUNTRY_NAME, SUM(E.SALARY)
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
  JOIN LOCATIONS LOC
  ON D.LOCATION_ID = LOC.LOCATION_ID
  JOIN COUNTRIES CONT
  ON LOC.COUNTRY_ID = CONT.COUNTRY_ID
GROUP BY CONT.COUNTRY_NAME;

-- 13. 사번, 직원이름, 직무 이름, 급여를 검색.
SELECT E.EMPLOYEE_ID, E.FIRST_NAME
                                                     || E.LAST_NAME AS 직원이름, J.JOB_TITLE, E.SALARY
FROM EMPLOYEES E, JOBS J
WHERE E.JOB_ID = J.JOB_ID;

SELECT E.EMPLOYEE_ID, E.FIRST_NAME
                      || E.LAST_NAME AS 직원이름, J.JOB_TITLE, E.SALARY
FROM EMPLOYEES E
  JOIN JOBS J
  ON E.JOB_ID = J.JOB_ID;

-- 14. 직무 이름, 직무별 급여 평균, 최솟값, 최댓값 검색.
SELECT J.JOB_TITLE, AVG(E.SALARY), MIN(E.SALARY), MAX(E.SALARY)
FROM EMPLOYEES E, JOBS J
WHERE E.JOB_ID = J.JOB_ID
GROUP BY J.JOB_TITLE;

SELECT J.JOB_TITLE, AVG(E.SALARY), MIN(E.SALARY), MAX(E.SALARY)
FROM EMPLOYEES E
  JOIN JOBS J
  ON E.JOB_ID = J.JOB_ID
GROUP BY J.JOB_TITLE;

-- 15. 국가 이름, 직무 이름, 국가별 직무별 급여 평균 검색.
SELECT CONT.COUNTRY_NAME, J.JOB_TITLE, AVG(E.SALARY)
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS LOC, COUNTRIES CONT, JOBS J
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
  AND D.LOCATION_ID = LOC.LOCATION_ID
  AND LOC.COUNTRY_ID = CONT.COUNTRY_ID
  AND E.JOB_ID = J.JOB_ID
GROUP BY CONT.COUNTRY_NAME, J.JOB_TITLE;

SELECT CONT.COUNTRY_NAME, J.JOB_TITLE, AVG(E.SALARY)
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
  JOIN LOCATIONS LOC
  ON D.LOCATION_ID = LOC.LOCATION_ID
  JOIN COUNTRIES CONT
  ON LOC.COUNTRY_ID = CONT.COUNTRY_ID
  JOIN JOBS J
  ON E.JOB_ID = J.JOB_ID
GROUP BY CONT.COUNTRY_NAME, J.JOB_TITLE;

-- 16. 국가 이름, 직무 이름, 국가별 직무별 급여 합계을 출력.
--     미국에서, 국가별 직무별 급여 합계가 50,000 이상인 레코드만 출력.
SELECT CONT.COUNTRY_NAME, J.JOB_TITLE, SUM(E.SALARY)
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS LOC, COUNTRIES CONT, JOBS J
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
  AND D.LOCATION_ID = LOC.LOCATION_ID
  AND LOC.COUNTRY_ID = CONT.COUNTRY_ID
  AND E.JOB_ID = J.JOB_ID
  AND CONT.COUNTRY_NAME = 'United States of America'
GROUP BY CONT.COUNTRY_NAME, J.JOB_TITLE
HAVING SUM(E.SALARY) > 50000;

SELECT CONT.COUNTRY_NAME, J.JOB_TITLE, SUM(E.SALARY)
FROM EMPLOYEES E
  JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
  JOIN LOCATIONS LOC
  ON D.LOCATION_ID = LOC.LOCATION_ID
  JOIN COUNTRIES CONT
  ON LOC.COUNTRY_ID = CONT.COUNTRY_ID
  JOIN JOBS J
  ON E.JOB_ID = J.JOB_ID
  AND CONT.COUNTRY_NAME = 'United States of America'
GROUP BY CONT.COUNTRY_NAME, J.JOB_TITLE
HAVING SUM(E.SALARY) > 50000;